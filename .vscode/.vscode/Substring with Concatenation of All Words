class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
            ArrayList<Integer> res = new ArrayList<>();
        if(s.length()==0 || words.length==0 || words[0].length()==0) return res;
        HashMap<String,Integer> map = new HashMap<>();
            for(String str: words){
                    map.put(str,map.getOrDefault(str,0)+1);
            }
            int k=words[0].length(),n=s.length(),m=words.length;
            for(int i=0;i<=n-k*m;i++){
                    HashMap<String , Integer> seen = new HashMap<>();
                    for(int j=0;j<m;j++){
                            int index = i+j*k;
                            String word = s.substring(index,index+k);
                            if(!map.containsKey(word)) break;
                            seen.put(word,seen.getOrDefault(word,0)+1);
                            if(seen.get(word)>map.get(word)) break;
                            if(j+1==m) res.add(i);
                    }
            }
            return res;
                
    }
}
