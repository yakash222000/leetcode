class Solution {
    public boolean reorderedPowerOf2(int n) {
        int[] freq = new int[10];
        int num=n;
        int digit=0;
            while(num>0){
                    freq[num%10]++;
                    num/=10;
                    digit++;
                    
            }
            int pow=1;
            while(pow>0){
                    int[] numfreq = new int[10];
                    int currdigit=0;
                    int temp=pow;
                    
                    while(temp>0){
                            numfreq[temp%10]++;
                            temp/=10;
                            currdigit++;     
                    }
                    if(currdigit>digit) return false;
                    if(currdigit==digit && Arrays.equals(freq,numfreq)) return true;
                    pow<<=1;
                    
            }
            return false;
    }
}
